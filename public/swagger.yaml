openapi: 3.0.0
info:
  title: ASHER2.0
  description: This is Asher's API. It allows users to manage tasks,
    register and authenticate users, and retrieve support information. The API
    is built using Node.js, Express, and Prisma, and it communicates with a
    PostgreSQL database to store and retrieve data.
  version: 1.0.0
servers:
  - url: http://{{host}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Emails
  - name: Auth
    description: >-
      This section details the process by which users gain authorization to
      access API resources within the asher support system. It encompasses the
      essential steps of user registration, login with OTP verification, and JWT
      token issuance.


      **1\. User Registration**


      - **Endpoint:** `POST /api/auth/register`
          
      - **Request Body:**
          
          - `name` (string): User's chosen username or identifier.
              
          - `password` (string): User's password for authentication.
              
          - `email` (string): User's email address for OTP verification and communication.
              
      - **Response:**
          
          - Upon successful registration, the API returns a 201 Created status code along with a confirmation message or a success object containing user details.
              
          - Note: Only Admin can register a user
              

      **Additional Step: Verifying OTP**


      - The user receives an OTP (One-Time Password) via email.
          
      - The user submits the OTP along with a request to verify it.
          
      - **Endpoint:** `POST /api/auth/verify`
          
      - **Request Body:**
          
          - `otp` (string): The received OTP.
              
          - `email` (string): The user email.
              
      - **Response:**
          
          - If the OTP is valid, a 200 OK status code is returned.
              

      **2\. User Login after OTP Verification**


      - **Endpoint:** `POST /api/auth/login`
          
      - **Request Body:**
          
          - `email` (string): User's registered username or identifier.
              
          - `password` (string): User's password for authentication.
              
      - **Response:**
          
          - If the username and password combination is valid, a 200 OK status code is returned, along with a message indicating the OTP has been sent to the user's email address.
              
          - For other errors (e.g., network issues, system errors), a 500 Internal Server Error status code is returned with a generic error message.
              

      **3\. JWT Token Usage**


      - The received JWT token should be included in the authorization header of
      subsequent API requests to access protected resources.
          
      - The format of the authorization header typically follows:
      `Authorization: Bearer` .
          
      - The API server verifies the validity of the JWT token before granting
      access to the requested resource.
          
      - If the token is invalid or expired, a 401 Unauthorized status code is
      returned, requiring the user to re-authenticate.
paths:
  /api/emails/:
    post:
      tags:
        - Emails
      summary: Create Email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  format: binary
                recieverEmail:
                  type: string
                  example: admin123@gmail.com
                subject:
                  type: string
                  example: Cancas Housing Estate Moves
                body:
                  type: string
                  example: >-
                    You can find the doc attached We need to update the
                    markEmailAsRead and sendDraftEmail methods to work with our
                    new email model.
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '289'
            ETag:
              schema:
                type: string
                example: W/"121-zI4IqoFMJXlUda4l9JsQ78KAQcQ"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 01:46:23 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Create Email
                  value:
                    id: clyf6ild70001vdgkgmsimgsi
                    senderEmail: aliyutimileyin2340@gmail.com
                    recieverEmail: admin123@gmail.com
                    subject: Mayor One
                    body: Awareness for the email accomplichment
                    attachment: null
                    isRead: false
                    isDraft: false
                    isSent: false
                    createdAt: '2024-07-10T01:46:23.266Z'
                example-1:
                  summary: Create Email
                  value:
                    id: clyf6ild70001vdgkgmsimgsi
                    senderEmail: aliyutimileyin2340@gmail.com
                    recieverEmail: admin123@gmail.com
                    subject: Mayor One
                    body: Awareness for the email accomplichment
                    attachment: null
                    isRead: false
                    isDraft: false
                    isSent: false
                    createdAt: '2024-07-10T01:46:23.266Z'
                example-2:
                  summary: Create Email With Attachment
                  value:
                    id: clyfdgx2f0001udtxks8vxpk7
                    senderEmail: aliyutimileyin2340@gmail.com
                    recieverEmail: admin123@gmail.com
                    subject: Cancas Housing Estate Moves
                    body: >-
                      You can find the doc attached We need to update the
                      markEmailAsRead and sendDraftEmail methods to work with
                      our new email model.
                    attachment:
                      - >-
                        https://res.cloudinary.com/carter827/raw/upload/v1720560085/xlpqt4h6wc4y1uv1vbqg
                    isReadBySender: true
                    isReadByReciever: false
                    isDraft: true
                    isSent: false
                    createdAt: '2024-07-10T05:01:02.439Z'
  /api/emails/user/{email}/unread:
    get:
      tags:
        - Emails
      summary: Unread Emails
      parameters:
        - name: email
          in: path
          schema:
            type: string
          required: true
          example: admin123@gmail.com
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1486'
            ETag:
              schema:
                type: string
                example: W/"5ce-u4OwNpLq7Ea3KzY/G2LdbLitAGA"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 01:53:44 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - id: clyf6ild70001vdgkgmsimgsi
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:46:23.266Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                - id: '2'
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:18:59.102Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                - id: '1'
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:18:13.114Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
  /api/emails/user/{email}/sent:
    get:
      tags:
        - Emails
      summary: Sent Emails
      parameters:
        - name: email
          in: path
          schema:
            type: string
          required: true
          example: aliyutimileyin2340@gmail.com
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1486'
            ETag:
              schema:
                type: string
                example: W/"5ce-u4OwNpLq7Ea3KzY/G2LdbLitAGA"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 01:49:28 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - id: clyf6ild70001vdgkgmsimgsi
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:46:23.266Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                - id: '2'
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:18:59.102Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                - id: '1'
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin123@gmail.com
                  subject: Mayor One
                  body: Awareness for the email accomplichment
                  attachment: null
                  isRead: false
                  isDraft: false
                  isSent: false
                  createdAt: '2024-07-10T01:18:13.114Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin123@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
  /api/emails/user/{email}/inbox:
    get:
      tags:
        - Emails
      summary: Get Emails
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          schema:
            type: string
          required: true
          example: admin123@gmail.com
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '30'
            ETag:
              schema:
                type: string
                example: W/"1e-SIEpoZZR2uD0Lb8pqZERube1cDs"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 01:07:31 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: No Emails to Get Emails
                  value:
                    message: 'No emails found '
                example-1:
                  summary: Get Emails
                  value:
                    - id: clyf6ild70001vdgkgmsimgsi
                      senderEmail: aliyutimileyin2340@gmail.com
                      recieverEmail: admin123@gmail.com
                      subject: Mayor One
                      body: Awareness for the email accomplichment
                      attachment: null
                      isRead: false
                      isDraft: false
                      isSent: false
                      createdAt: '2024-07-10T01:46:23.266Z'
                      sender:
                        email: aliyutimileyin2340@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
                      reciver:
                        email: admin123@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
                    - id: '2'
                      senderEmail: aliyutimileyin2340@gmail.com
                      recieverEmail: admin123@gmail.com
                      subject: Mayor One
                      body: Awareness for the email accomplichment
                      attachment: null
                      isRead: false
                      isDraft: false
                      isSent: false
                      createdAt: '2024-07-10T01:18:59.102Z'
                      sender:
                        email: aliyutimileyin2340@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
                      reciver:
                        email: admin123@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
                    - id: '1'
                      senderEmail: aliyutimileyin2340@gmail.com
                      recieverEmail: admin123@gmail.com
                      subject: Mayor One
                      body: Awareness for the email accomplichment
                      attachment: null
                      isRead: false
                      isDraft: false
                      isSent: false
                      createdAt: '2024-07-10T01:18:13.114Z'
                      sender:
                        email: aliyutimileyin2340@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
                      reciver:
                        email: admin123@gmail.com
                        role:
                          - WEBUSER
                        profile:
                          fullname: null
                          profileUrl: null
  /api/emails/user/{email}/drafts:
    get:
      tags:
        - Emails
      summary: Get Draft
      parameters:
        - name: email
          in: path
          schema:
            type: string
          required: true
          example: aliyutimileyin2340@gmail.com
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '509'
            ETag:
              schema:
                type: string
                example: W/"1fd-/otaGOgHFCMWLFeVhfdJgIqZCgE"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 01:52:29 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - id: clyf6pbpl0003vdgk1jfurjxx
                  senderEmail: aliyutimileyin2340@gmail.com
                  recieverEmail: admin@admin@gmail.com
                  subject: Cansouler e
                  body: Application for Rent Reciept
                  attachment: null
                  isRead: false
                  isDraft: true
                  isSent: false
                  createdAt: '2024-07-10T01:51:37.353Z'
                  sender:
                    email: aliyutimileyin2340@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
                  reciver:
                    email: admin@admin@gmail.com
                    role:
                      - WEBUSER
                    profile:
                      fullname: null
                      profileUrl: null
  /api/emails/{emailId}/read:
    patch:
      tags:
        - Emails
      summary: Mark Email as Read
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      parameters:
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: clyf6ild70001vdgkgmsimgsi
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: admin123@gmail.com
                password: admin123
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '297'
            ETag:
              schema:
                type: string
                example: W/"129-/e7muHecJIHfFnxeDjcgvqmTGvY"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 00:23:55 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: >-
                  User registered successfully, check your email for
                  verification code
                user:
                  id: '2'
                  email: aliyutimileyin2340@gmail.com
                  password: $2b$10$vgqi07DYuj/C1TemS1vckuPca0kxUG1uwyJvUuitKQg3Dklvo8ReS
                  isVerified: false
                  createdAt: {}
                  updatedAt: {}
                  role:
                    - WEBUSER
                  profileId: '2'
  /api/auth/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aliyutimileyin2340@gmail.com
                password: Asdfvbnm1@
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '402'
            ETag:
              schema:
                type: string
                example: W/"192-0iLL5s5J8wLoVXLacMzWV/bDtnI"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 00:26:38 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User logged in successfully
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6IldFQlVTRVIiLCJlbWFpbCI6ImFsaXl1dGltaWxleWluMjM0MEBnbWFpbC5jb20iLCJpYXQiOjE3MjA1NzExOTgsImV4cCI6MTcyMDU3NDc5OH0.KkKww_QIg24Oh7_onfWLc-ntQ5-XegHhvCduHHkPCuw
                userDetails:
                  email: aliyutimileyin2340@gmail.com
                  isVerified: true
                  createdAt: {}
                  updatedAt: {}
                  role:
                    - WEBUSER
                  profileId: '2'
  /api/user/me:
    get:
      tags:
        - Auth
      summary: Get Current User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/verify:
    post:
      tags:
        - Auth
      summary: Verify email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: admin123@gmail.com
                token: ts3znomi85lyf5bk81
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '180'
            ETag:
              schema:
                type: string
                example: W/"b4-MAuSLqAdGVQBJDxxNTbJaw5IE5M"
            Date:
              schema:
                type: string
                example: Wed, 10 Jul 2024 00:19:05 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: User verified successfully
                user:
                  id: '1'
                  email: aliyutimileyin2340@gmail.com
                  isVerified: true
                  createdAt: {}
                  updatedAt: {}
                  role:
                    - WEBUSER
                  profileId: '1'
    get:
      tags:
        - Auth
      summary: Update Profile
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/logout:
    get:
      tags:
        - Auth
      summary: Logout
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

